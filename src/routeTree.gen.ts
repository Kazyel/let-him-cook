/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AppRecipesIndexRouteImport } from './routes/_app/recipes/index'
import { Route as AppRecipesNewRouteImport } from './routes/_app/recipes/new'
import { Route as AppRecipesRecipeIdRouteImport } from './routes/_app/recipes/$recipeId'
import { Route as AppProfileUserIdRouteImport } from './routes/_app/profile/$userId'

const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRecipesIndexRoute = AppRecipesIndexRouteImport.update({
  id: '/recipes/',
  path: '/recipes/',
  getParentRoute: () => AppRoute,
} as any)
const AppRecipesNewRoute = AppRecipesNewRouteImport.update({
  id: '/recipes/new',
  path: '/recipes/new',
  getParentRoute: () => AppRoute,
} as any)
const AppRecipesRecipeIdRoute = AppRecipesRecipeIdRouteImport.update({
  id: '/recipes/$recipeId',
  path: '/recipes/$recipeId',
  getParentRoute: () => AppRoute,
} as any)
const AppProfileUserIdRoute = AppProfileUserIdRouteImport.update({
  id: '/profile/$userId',
  path: '/profile/$userId',
  getParentRoute: () => AppRoute,
} as any)

export interface FileRoutesByFullPath {
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof AppIndexRoute
  '/profile/$userId': typeof AppProfileUserIdRoute
  '/recipes/$recipeId': typeof AppRecipesRecipeIdRoute
  '/recipes/new': typeof AppRecipesNewRoute
  '/recipes': typeof AppRecipesIndexRoute
}
export interface FileRoutesByTo {
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof AppIndexRoute
  '/profile/$userId': typeof AppProfileUserIdRoute
  '/recipes/$recipeId': typeof AppRecipesRecipeIdRoute
  '/recipes/new': typeof AppRecipesNewRoute
  '/recipes': typeof AppRecipesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/_app/': typeof AppIndexRoute
  '/_app/profile/$userId': typeof AppProfileUserIdRoute
  '/_app/recipes/$recipeId': typeof AppRecipesRecipeIdRoute
  '/_app/recipes/new': typeof AppRecipesNewRoute
  '/_app/recipes/': typeof AppRecipesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth/login'
    | '/auth/register'
    | '/'
    | '/profile/$userId'
    | '/recipes/$recipeId'
    | '/recipes/new'
    | '/recipes'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth/login'
    | '/auth/register'
    | '/'
    | '/profile/$userId'
    | '/recipes/$recipeId'
    | '/recipes/new'
    | '/recipes'
  id:
    | '__root__'
    | '/_app'
    | '/auth/login'
    | '/auth/register'
    | '/_app/'
    | '/_app/profile/$userId'
    | '/_app/recipes/$recipeId'
    | '/_app/recipes/new'
    | '/_app/recipes/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/recipes/': {
      id: '/_app/recipes/'
      path: '/recipes'
      fullPath: '/recipes'
      preLoaderRoute: typeof AppRecipesIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/recipes/new': {
      id: '/_app/recipes/new'
      path: '/recipes/new'
      fullPath: '/recipes/new'
      preLoaderRoute: typeof AppRecipesNewRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/recipes/$recipeId': {
      id: '/_app/recipes/$recipeId'
      path: '/recipes/$recipeId'
      fullPath: '/recipes/$recipeId'
      preLoaderRoute: typeof AppRecipesRecipeIdRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/profile/$userId': {
      id: '/_app/profile/$userId'
      path: '/profile/$userId'
      fullPath: '/profile/$userId'
      preLoaderRoute: typeof AppProfileUserIdRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppProfileUserIdRoute: typeof AppProfileUserIdRoute
  AppRecipesRecipeIdRoute: typeof AppRecipesRecipeIdRoute
  AppRecipesNewRoute: typeof AppRecipesNewRoute
  AppRecipesIndexRoute: typeof AppRecipesIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppProfileUserIdRoute: AppProfileUserIdRoute,
  AppRecipesRecipeIdRoute: AppRecipesRecipeIdRoute,
  AppRecipesNewRoute: AppRecipesNewRoute,
  AppRecipesIndexRoute: AppRecipesIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
